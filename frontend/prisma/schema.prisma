// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String        @id @default(cuid())
  name        String        @unique
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  subcategories Subcategory[]
}

model Subcategory {
  id          String    @id @default(cuid())
  name        String
  description String?
  categoryId  String
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([name, categoryId])
}

model Product {
  id            String         @id @default(cuid())
  name          String
  sku           String         @unique
  description   String?
  price         Float
  salePrice     Float?
  stockQuantity Int            @default(0)
  karat         String?
  weight        Float?
  tags          String[]       @default([])
  isPublished   Boolean        @default(false)
  subcategoryId String
  subcategory   Subcategory    @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  images        ProductImage[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model ProductImage {
  id        String  @id @default(cuid())
  url       String
  publicId  String
  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
